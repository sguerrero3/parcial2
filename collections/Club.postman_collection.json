{
	"info": {
		"_postman_id": "0e2a3126-3c9c-40eb-9406-2e981861667b",
		"name": "Club",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23290231"
	},
	"item": [
		{
			"name": "Crear un club válido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.environment.set(\"club_id\", data.id)\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"pepito\",\r\n    \"fechaFundacion\": \"2022-08-23\",\r\n    \"imagen\": \"www.google.com\",\r\n    \"descripcion\": \"Soy una descripcion\"\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/clubs",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un club inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The descripcion is not accepted\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"pepito\",\r\n    \"fechaFundacion\": \"2022-08-23\",\r\n    \"imagen\": \"www.google.com\",\r\n    \"descripcion\": \"Soy una descripcion con mas de 100 caracteres fndjsjfnasfjndsjanfsdkjanfjknsdajknfjkdsnajknfjksndajknjkfnsdjkanjfsdnjkanjfsdanjkfsd\"\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/clubs",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los clubs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of clubs > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/clubs",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un club por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/clubs/{{club_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs",
						"{{club_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un club por un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The club with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/clubs/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"pepito actualizado\",\r\n    \"fechaFundacion\": \"2022-08-22\",\r\n    \"imagen\": \"www.google.com\",\r\n    \"descripcion\": \"Soy una descripcion act\"\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/clubs/{{club_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs",
						"{{club_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un club con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The club with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"pepito actualizado\",\r\n    \"fechaFundacion\": \"2022-08-22\",\r\n    \"imagen\": \"www.google.com\",\r\n    \"descripcion\": \"Soy una descripcion act\"\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/clubs/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un club por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/clubs/{{club_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs",
						"{{club_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un club con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The club with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/clubs/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		}
	]
}